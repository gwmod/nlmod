[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "nlmod"
dynamic = ["version"]
description = "Python package to build, run and visualize MODFLOW 6 groundwater models in the Netherlands."
license = { file = "LICENSE" }
readme = "README.md"
authors = [
    { name = "O. Ebbens" },
    { name = "R. CaljÃ©" },
    { name = "D.A. Brakenhoff" },
]
maintainers = [
    { name = "O. Ebbens", email = "o.ebbens@artesia-water.nl" },
    { name = "R. Calje", email = "r.calje@artesia-water.nl" },
    { name = "D.A. Brakenhoff", email = "d.brakenhoff@artesia-water.nl" },
]
requires-python = ">= 3.8"
dependencies = [
    "flopy>=3.3.6",
    "xarray>=0.16.1",
    "netcdf4>=1.6.3",
    "rasterio>=1.1.0",
    "rioxarray",
    "affine>=0.3.1",
    "geopandas",
    "owslib>=0.24.1",
    "hydropandas>=0.9.2",
    "shapely>=2.0.0",
    "pyshp>=2.1.3",
    "matplotlib",
    "dask",
    "colorama",
    "joblib",
    "bottleneck",
]
keywords = ["hydrology", "groundwater", "modeling", "Modflow 6", "flopy"]
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'Intended Audience :: Other Audience',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Scientific/Engineering :: Hydrology',
]

[project.urls]
homepage = "https://github.com/gwmod/nlmod"
repository = "https://github.com/gwmod/nlmod"
documentation = "https://nlmod.readthedocs.io/en/latest/"

[project.optional-dependencies]
full = [
    "nlmod[knmi]",
    "gdown",
    "geocube",
    "rasterstats",
    "contextily",
    "scikit-image",
    "py7zr"
]
knmi = ["h5netcdf", "nlmod[grib]"]
grib = ["cfgrib", "ecmwflibs"]
test = ["pytest>=7", "pytest-cov", "pytest-dependency"]
nbtest = ["nbformat", "nbconvert>6.4.5"]
lint = ["flake8", "isort", "black[jupyter]"]
ci = ["nlmod[full,lint,test,nbtest]", "numpy==1.26.4"]
rtd = [
    "nlmod[full]",
    "ipython",
    "ipykernel",
    "ipywidgets",
    "nbsphinx",
    "sphinx_rtd_theme==1.0.0",
    "nbconvert==7.13.0",
    "netCDF4<1.7.0",
	"numpy==1.26.4"
]

[tool.setuptools.dynamic]
version = { attr = "nlmod.version.__version__" }

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"nlmod.data" = ["*.gleg"]
"nlmod.data.geotop" = ["*"]
"nlmod.data.shapes" = ["*"]
"nlmod.data.ahn" = ["*"]
"nlmod.data.bgt" = ["*"]
"nlmod.data.bofek" = ["*"]
"nlmod.bin" = ["mp7_2_002_provisional"]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"]

[tool.ruff.lint]
# See: https://docs.astral.sh/ruff/rules/
select = [
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "PT",  # pytest-style
    "D",   # pydocstyle
    "B",   # flake8-bugbear
    "NPY", # numpy
]
ignore = [
    "D401", # Imperative mood for docstring. Be glad we have docstrings at all :P!
    "D100", # Missing docstring in module.
    "D104", # Missing docstring in public package.
]

[tool.ruff.format]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
addopts = "--strict-markers --durations=0 --cov-report xml:coverage.xml --cov nlmod -v"
markers = ["notebooks: run notebooks", "slow: slow tests", "skip: skip tests"]
